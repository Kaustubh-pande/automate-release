name: Create Tag and Release
on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Enter tag name to be created'
        required: true
      # release_name:
      #   description: 'Enter the release branch name'
      #   required: true
        
# jobs:
#   example-job:
#     runs-on: ubuntu-latest
#     steps:
#     # - name: versiontag.sh
#     #   run: |
#     #     chmod +x ./versiontag.sh
#     #     ./versiontag.sh
#     - name: Checkout code
#       uses: actions/checkout@v2
#     - name: Print the version number
#       run: echo "Version number is ${{ github.event.inputs.version }}"
#     - name: Print the release number
#       run: echo "Release number is ${{ github.event.inputs.release_branch }}"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: ${{ github.event.inputs.tag_name }}
          body: |
            Changelog:
            - Added new feature
            - Fixed bugs
          draft: false
          prerelease: false
      - name: Generate Release Notes
        id: generate_release_notes
        run: |
          # Fetch the latest tag before yours
          latest_tag=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
      
          # Generate release notes between the latest tag and the current tag
          git log --oneline $latest_tag..HEAD > release_notes.txt
      
          # Output the latest tag for reference in the next steps
          echo "::set-output name=latest_tag::$latest_tag"
          echo "::set-output name=release_notes_file_path::release_notes.txt"
      - name: Create Release Notes
        id: create_release_notes
        uses: actions/create-release-notes@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ${{ steps.generate_release_notes.outputs.release_notes_file_path }}
          draft: false
          prerelease: false



  
