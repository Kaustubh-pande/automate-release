name: Create Tag and Release changelog

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the new release'
        required: true

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  fetch-tag:
    runs-on: ubuntu-latest
    outputs:
      old_tag: ${{ steps.get_tag.outputs.old_tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git ls-remote --tags origin | awk -F"/" '{print $3}' | grep -v '{}' | sort -V | tail -n1)
          echo "Latest tag found: $latest_tag"
          echo "::set-output name=old_tag_name::$latest_tag"

  changelog:
    name: Build Changelog
    needs: [fetch-tag]
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}
    env:
      old_tag: ${{ needs.fetch-tag.outputs.old_tag }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          fromTag: ${{ needs.fetch-tag.outputs.old_tag }}
          toTag:  ${{ github.event.inputs.tag_name }}
          token: ${{ github.token }}
      - name: Save changelog to file
        run: echo "${{ steps.build_changelog.outputs.changelog }}" > changelog.md

  release:
    name: Release
    needs: [changelog,fetch-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Release Notes
        run: cat changelog.md
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          tag_name: ${{ github.event.inputs.tag_name }}
          prerelease: false
          draft: false
          files: changelog.md
          name: ${{ github.event.inputs.tag_name }}
          body: |
            Changelog:
            $(cat changelog.md)
